@model Tuhu.YeWu.TenGu.Models.StockLocationView
@{
    Layout = "../Shared/_Inner.cshtml";
}
@if (Model != null)
{
    <div class="col-lg-12 row">
        @using (Html.BeginForm("PoInstock", "InfoList", Model.PKID, FormMethod.Post, new { @onsubmit = "return SubmitCheck()",id = "poStockForm" }))
        {
            @Html.ValidationSummary(true)
            <table class="table table-bordered" style="width: 720px; margin: 5px;">
                <tr>
                    <th>产品名称</th>
                    <td colspan="5">
                        @Html.TextBoxFor(model => model.Name, new { @readonly = "readonly", @Style = "width: 98%;" })
                        @Html.ValidationMessageFor(model => model.Name)
                    </td>
                </tr>
                <tr>
                    <th>产品编号</th>
                    <td colspan="3">
                        @Html.TextBoxFor(model => model.PID, new {@readonly = "readonly", @Style = "width: 98%;"})
                        @Html.ValidationMessageFor(model => model.PID)
                    </td>
                    <th>入库人</th>
                    <td>
                        <label>@User.Identity.Name</label>
                    </td>
                </tr>
                <tr>
                    <th style="width: 10%;">入库仓库</th>
                    <td style="width: 30%;">
                        <input id="returnUrl" name="returnUrl" type="hidden" value="@ViewBag.returnUrl" style="width: 98%;"/>
                        @Html.HiddenFor(model => model.Location)
                        @Html.DropDownListFor(model => model.LocationId, new SelectList(ViewBag.Location as System.Collections.IEnumerable, "PKID", "SimpleName"), "请选择", new {@onchange = "LocationChanged()", @style = "width: 98%; border: 1px #FBB44C solid;" })
                        @Html.ValidationMessageFor(model => model.LocationId)
                    </td>
                    <th style="width: 10%;">入库日期</th>
                    <td style="width: 20%;">
                        @Html.TextBoxFor(model => model.UpdatedTime, new { @style = "width: 98%; border: 1px #FBB44C solid;", Value = String.Format("{0:yyyy-MM-dd}", Model.UpdatedTime), onclick = "WdatePicker({ dateFmt: 'yyyy-MM-dd', skin: 'blueFresh' })" })
                        @Html.ValidationMessageFor(model => model.UpdatedTime)
                    </td>
                    <th style="width: 10%;">入库数量</th>
                    <td style="width: 20%;">
                        @Html.TextBoxFor(model => model.Num, new { onchange = "EditQuantity(this);", @style = "width: 98%; border: 1px #FBB44C solid;" })
                        @Html.ValidationMessageFor(model => model.Num)
                    </td>
                </tr>
                <tr>
                    <th>生产日期</th>
                    <td>
                        @Html.TextBoxFor(model => model.WeekYear, new { @style= "width: 65%; border: 1px #FBB44C solid;" })<span>(周周年年)</span>
                        @Html.ValidationMessageFor(model => model.WeekYear)
                        <div id="WeekYearErr" style="display: none; color: Red">
                            必填
                        </div>
                    </td>
                    <th>成本单价</th>
                    <td>
                        @Html.TextBoxFor(model => model.CostPrice, new { @readonly = "readonly", @style = "width: 98%;" })
                        @Html.ValidationMessageFor(model => model.CostPrice)
                    </td>
                    <th>成本总价</th>
                    <td>
                        @Html.TextBoxFor(model => model.TotalCost, new {@readonly = "readonly", @style = "width: 98%;" })
                        @Html.ValidationMessageFor(model => model.TotalCost)
                    </td>
                </tr>
                <tr>
                    <th>备注</th>
                    <td colspan="5">
                        @Html.TextBoxFor(model => model.Remark, new { @style = "width: 98%; border: 1px #FBB44C solid;" })
                        @Html.ValidationMessageFor(model => model.Remark)
                    </td>
                </tr>
            </table>
        }
    </div>
}
else
{
    <div style="text-align: center; font-weight: 600; font-size: 20px;">
        已经入库，请勿重复入库。
    </div>
}

<script type="text/javascript" language="javascript">
    //$(function () {
    //    $("#UpdatedTime").datepicker();
    //});
    function LocationChanged() {
        if (document.getElementById("LocationId").value >= 0) {
            var ddlReport = document.getElementById("LocationId");
            document.getElementById("Location").value = ddlReport.options[ddlReport.selectedIndex].text;
        }
        else {
            document.getElementById("Location").value = "";
            $("#WareHouseID").val("-100");
            $("#WareHouse").val("");
        }
    }
    //function SubmitCheck() {
    //    if (document.getElementById("WeekYear").value == "") {
    //        document.getElementById("WeekYearErr").style.display = "inline";
    //        return false;
    //    }
    //    $("#instock").attr("disabled", "disabled");
    //    return true;
    //}

    function EditQuantity(target) {
        var oldQuantity = '@(Model!=null?Model.Num:0)';
        var temp = $(target).val();
        if (!/^\d+$/.test(temp)) {
            return false;
        }
        if (parseInt(temp) > parseInt(oldQuantity)) {
            alert("入库数量不能大于" + oldQuantity);
            $(target).val(oldQuantity).focus();
            return false;
        }
        $("#TotalCost").val(temp*'@(Model!=null?Model.CostPrice:0)');
    }
</script> 